<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
    integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
  <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
    integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"
    integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
    crossorigin="anonymous"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
    integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
    crossorigin="anonymous"></script>
  <script defer src="https://use.fontawesome.com/releases/v5.0.10/js/all.js"
    integrity="sha384-slN8GvtUJGnv6ca26v8EzVaR9DC58QEwsIk9q1QXdCU8Yu8ck/tL/5szYlBbqmS+"
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.9/vue.js"></script>

  <script>
    FontAwesomeConfig = { autoReplaceSvg: false }
  </script>
  <!-- font -->
  <link rel="stylesheet" type="text/css"
    href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />


  <link href="/stylesheets/profile.css" rel="stylesheet">

  <script>
    function Delete(e) {
      console.log(e.parentElement.parentElement.children[0].textContent);
      let items = [];
      JSON.parse(localStorage.getItem('items')).map(data => {
        if (data.productId != e.parentElement.parentElement.children[0].textContent) {

          items.push(data);

        }
        else {
          if (data.number - 1 != 0) {
            data.number = data.number - 1;
            items.push(data);
          }
        }
      });
      localStorage.setItem('items', JSON.stringify(items));
      window.location.reload();
    };
  </script>

  <title>Moving Sale E-Shop</title>
</head>

<body data-spy="scroll" data-target=".navbar" data-offset="50" id="page-top">

  <nav class="navbar sticky-top navbar-expand-lg navbar-dark bg-dark" id="topNav">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Moving Sale E-Shop</a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavAltMarkup"
        aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>

      <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
        <div class="navbar-nav w-100">
          <a class="nav-link " href="/home">Home</a>
          <a class="nav-link" href="/about">About</a>
          <% if(currentUser) {%>
          <a class="nav-link" href="/products/new">Add</a>
          <% } %>
          <a class="nav-link" href="/products">Products</a>
        </div>
        <div class="navbar-nav ml-auto">
          <% if(!currentUser) {%>

          <a class="nav-link" href="/login">Login</a>
          <a class="nav-link" href="/register">Register</a>
          <% } else { %>
          <p id="cartNum" style="color: aquamarine;">0</p>
          <i class="iconShopping fa fa-shopping-cart fa-2x fa-fw" style="color: aquamarine;"></i>
          <a class="nav-link" href="/profile">Profile</a>
          <a id="logout" class="nav-link" href="/logout">Logout</a>
          <% } %>
        </div>
      </div>
    </div>
  </nav>

  <div class="container">
    <div class="row">

      <div class="col-sm">
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top" id="sideNav">

          <a class="navbar-brand js-scroll-trigger" href="#page-top">
            <span class="d-block d-lg-none">Moving Sale E-Shop</span>
            <span class="d-none d-lg-block">
              <!-- <img class="img-fluid img-profile mx-auto mb-2" src="img/profile.jpg" alt=""> -->
            </span>
          </a>
          <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavAltMarkup"
            aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
          </button>

          <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
            <ul class="nav flex-column">

              <li class="nav-item">
                <a class="nav-link active js-scroll-trigger" href="#Information">Information</a>
              </li>

              <li class="nav-item">
                <a class="nav-link js-scroll-trigger" href="#sellerHistory">Stock</a>
              </li>

              <li class="nav-item">
                <a class="nav-link js-scroll-trigger" href="#purchaseHistory">Purchased</a>
              </li>

            </ul>
          </div>

          <footer class="mt-auto text-white-50" id="copyright">
            <p>&copy; Lai & Lee 2021 </p>
          </footer>
        </nav>

        <div id="content" class="container-fluid p-0" style="position: relative;">
          <section class="resume-section p-3 p-lg-5 d-flex d-column" id="Information">
            <div class="my-auto">
              <div id="mydiv" data-test=<%= currentUser._id %>></div>


              <h1 class="mb-0 "> Hello, {{ users.userName }} </h1>
              <div id="userinfo">
                <div>
                  Account:
                  <input type="text" v-model="users.account" :disabled="!isEditing[0]" :class="{view: !isEditing[0]}">
                </div>

                <div>
                  Email:
                  <input type="text" v-model="users.email" :disabled="!isEditing[0]" :class="{view: !isEditing[0]}">
                </div>
                <!-- <div>{{ users.account }}</div> -->
                <div> Password: {{ users.pass }}</div>

                <button class="btn btn-info" @click="$set(isEditing, 0, true)" v-if="!isEditing[0]">
                  Edit
                </button>
                <button class="btn btn-success" @click="save(0); $set(isEditing, 0, false);" v-if="isEditing[0]">
                  Save
                </button>
                <button class="btn btn-danger" @click="del(0); $set(isEditing, 0, false);" v-if="isEditing[0]">
                  Delete
                </button>
                <button class="btn btn-dark" @click="$set(isEditing, 0, false)" v-if="isEditing[0]">
                  Cancel
                </button>

              </div>




            </div>
          </section>

          <section class="resume-section p-3 p-lg-5 d-flex flex-column" id="sellerHistory">
            <div>
              <h1 class="mb-0 "> Things to Sell</h1>
              <div id="sellerHistory" class="resume-item d-flex flex-column flex-md-row mb-5">
                <div class="resume-content mr-auto w-100">
                  <!-- <h3 class="mb-0">Things to Sell</h3> -->

                  <div class="container">
                    <div style="background-color: rgba(99, 111, 216, 0.5)" class="row">
                      <div class="col-sm">
                        Name
                      </div>
                      <div class="col-sm">
                        Price
                      </div>
                      <div class="col-sm">
                        Quantity
                      </div>
                    </div>
                  </div>

                  <div v-for="(user, idx) in users.products">

                    <div class="container">
                      <div style="background-color: rgba(181, 186, 228, 0.5)" class="row">
                        <div class="col-sm">
                          {{ user.productName }}
                        </div>
                        <div class="col-sm">
                          $ {{ user.price }}
                        </div>
                        <div class="col-sm">
                          {{ user.numberOfProduct }} piece(s)
                        </div>
                      </div>
                    </div>

                  </div>
                </div>


              </div>

            </div>
          </section>


          <section class="resume-section p-3 p-lg-5 d-flex flex-column" id="purchaseHistory">
            <div>
              <h1 class="mb-0 "> Purchase History</h1>
              <div id="sellerHistory" class="resume-item d-flex flex-column flex-md-row mb-5">
                <div class="resume-content mr-auto w-100">
                  <!-- <h3 class="mb-0">Purchase History</h3> -->

                  <div class="container">
                    <div style="background-color: rgba(99, 111, 216, 0.5)" class="row">
                      <div class="col-sm">
                        Name
                      </div>
                      <div class="col-sm">
                        Price
                      </div>
                      <div class="col-sm">
                        Quantity
                      </div>
                      <div class="col-sm">
                        Bought Date
                      </div>
                    </div>
                  </div>

                  <div v-for="(user, idx) in users.buyProducts">

                    <div class="container">
                      <div style="background-color: rgba(181, 186, 228, 0.5)" class="row">
                        <div class="col-sm">
                          {{ user.product_name }}
                        </div>
                        <div class="col-sm">
                          $ {{ user.price }}
                        </div>
                        <div class="col-sm">
                          {{ user.num }} piece(s)
                        </div>
                        <div class="col-sm">
                          {{ user.buy_at }}
                        </div>
                      </div>
                    </div>

                  </div>
                </div>


              </div>

            </div>
          </section>

        </div>

      </div>
    </div>
  </div>
  <div id="cont" class="cartBox">
    <div class="cart">
      <i class="fa fa-close"></i>
      <h1>Cart</h1>
      <h3 class="mb-0" style="color:black;">Things to Buy</h3>
      <div class="container">
        <div style="background-color: rgba(99, 111, 216, 0.5)" class="row">
          <div class="col-sm" style="color:black;">
            Name
          </div>
          <div class="col-sm" style="color:black;">
            Price
          </div>
          <div class="col-sm" style="color:black;">
            Number
          </div>
          <div class="col-sm" style="color:black;">
            Cancel
          </div>
        </div>
      </div>
      <div id="showItem" class="container" style="color:black;"></div>
      <div id="total" style="float:right; color:black;"> Total Price: $ 0</div>
      <button class="btn btn-info" style="float:right" @click="pay();"> Buy Them All</button>
    </div>
  </div>




  <script>
    var userID = document.getElementById('mydiv').dataset.test
    console.log(userID);
    const va = new Vue({
      el: '#content',
      data: {
        errorMsg: '',
        isEditing: {},
        users: [],
        historys: []
      },
      created() {
        this.load();
      },
      methods: {
        load() {

          fetch('/graphql', {
            method: 'POST',
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
              query: `
                query {
                    user(userId: "`+ userID + `") {
                      userName
                      account
                      email
                      pass
                      products{
                        productName
                        price
                        numberOfProduct
                      }
                      buyProducts {
                        buy_at
                        num
                        product_name
                        price
                      }
                    }
                  }
                `
            })
          })
            .then(async r => {
              if (!r.ok) throw new Error(await r.text());
              return r;
            })
            .then(r => r.json())
            .then(r => (this.users = r.data.user))
            // .then(console.log("hfuhd",JSON.parse(JSON.stringify(this.users))))
            .catch(this.flash)
        },
        save(idx) {
          console.log(JSON.parse(JSON.stringify(this.users)))
          // console.log(users.user_id)
          // console.log(users.email)
          const { account, email } = JSON.parse(JSON.stringify(this.users));
          // console.log(user_id)

          return fetch('/graphql', {
            method: 'POST',
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
              query: `
                mutation  {
                  updateUser( userId: "`+ userID + `", account: "` + account + `", email: "` + email + `" ) {
                    account
                  }
                }
                `
            })
          }).then(async r => {
            if (!r.ok) throw new Error(await r.text());
            return r;
          })
            .then(this.load)
            .catch(this.flash)

        }
        // ,

        // del(idx) {
        //   const { user_id } = this.users[idx];
        //   return fetch(`/api/user/${user_id}`, { method: 'DELETE' })
        //     .then(async r => {
        //       if (!r.ok) throw new Error(await r.text());
        //       return r;
        //     })
        //     .then(() => this.users.splice(idx, 1))
        //     .catch(this.flash)
        //     .then(this.load);

        // },
        // flash(msg) {
        //   this.errorMsg = msg
        // }
      }
    })

    const newVa = new Vue({
      el: '#cont',
      data: {
        errorMsg: '',
        isEditing: {},
        productList: []
      },
      created() {

      },
      methods: {
        pay() {
          // const { email_address, user_id } = this.users[idx];


          const localItems = localStorage.getItem("items");

          // validation

          const opts = {
            method: 'POST',
            body: localItems,
            headers: {
              'Content-Type': 'application/json'
            }
          };

          return fetch('/cart', opts)
            .then(async r => {
              if (!r.ok) throw new Error(await r.text());
              return r;
            })
            .then(localStorage.removeItem('items'))
            .then(this.load)
            .then(window.location.reload())
            .catch(this.flash)

        }
      }
    })
  </script>
  <script src="/javascripts/cart.js"></script>

</body>

</html>